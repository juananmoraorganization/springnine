# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B clean package -Denforcer.fail=false --file pom.xml
      - name: Submit results to Xray
        uses: mikepenz/xray-action@v3.0.4
        with:
          username: ${{ secrets.client_id }}
          password: ${{ secrets.client_secret }}
          testFormat: "junit"
          testPaths: "**/surefire-reports/*.xml"
          projectKey: "JON"
          testPlanKey: "JON-2884"
          testEnvironments: "desarrollo"

  deploydev:
    needs: build
    runs-on: ubuntu-latest
    environment: desarrollo
    steps:
      - name: Deploy Development
        run: echo app deployed en dev
     
  deploypre:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: deploydev
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Deploy PRE
        run: echo app deployed en PRE

  deploypro:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: deploypre
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy PRO
        run: echo app deployed en PRO


 
